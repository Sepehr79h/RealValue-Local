Note: These are 2 base functions that are required no matter what. Helper functions are allowed to be created. 

def create_dataset(...):
  '''
  Inputs: dataset name, path to raw dataset folder
  Outputs: path to concatenated, completely processed, dataset

  The goal of this function is to fully set up the dataset.
  The process occurs in the following steps.

  1. Create 3-8 augmented datasets for the single raw dataset in the "augmented_datasets folder" (based on specific transformations).
  2. For each augmented dataset, convert the 4 images corresponding to 1 house into 1 image per house
    - Bedroom top left, bathroom top right, kitchen bottom left, frontal top right.
  3. Note down outliers (look into processes for doing so) in dataset.
  4. For each augmented dataset, remove the same outliers.
  5. Concatenate all augmented datasets to create main dataset in the "main_dataset" folder.
  6. Return path to that folder.

  '''

def return_splits(...):
  '''
  Inputs: main dataset path, train/test and validation splits.
  Outputs: Train_images, train_stats, train_prices, validation_images, validation_stats, validation_prices, test_images, test_stats, test_prices.

  The goal of this function is to return all inputs and outputs required for training.
  The process occurs in the following steps:
  1. Use the "main_dataset" folder and the train_test splits to split the dataset appropriately into training, validation and test sections
  2. Return it within a dictionary.
  '''
